<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>mil.darpa.i2o</groupId>
		<artifactId>deft-docker</artifactId>
		<version>2.7.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>kb</artifactId>
	<version>2.7.1-SNAPSHOT</version>
	<name>kb</name>
	<description>A Docker image with the Parliament Triple-Store AND Postgres</description>
	<properties>
		<parliament-version>2.7.10</parliament-version>
		<maven.build.timestamp.format>yyMMdd-HHmmss-SSSS</maven.build.timestamp.format>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.bbn</groupId>
			<artifactId>parliamentQS</artifactId>
			<version>${parliament-version}</version>
			<type>zip</type>
		</dependency>
	</dependencies>
	<!-- docker run -it -p xxxx:8089 -p xxxx:5432 deft/kb -->
	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-parliament-zip</id>
						<phase>process-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.bbn</groupId>
									<artifactId>parliamentQS</artifactId>
									<version>${parliament-version}</version>
									<type>zip</type>
									<outputDirectory>${project.build.outputDirectory}</outputDirectory>
								</artifactItem>
							</artifactItems>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>remove-latest</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<workingDirectory>${project.build.directory}</workingDirectory>
							<executable>docker</executable>
							<arguments>
								<argument>rmi</argument>
								<argument>-f</argument>
								<argument>deft/${project.artifactId}:latest</argument>
							</arguments>
							<successCodes>
								<successCode>0</successCode>
								<successCode>1</successCode>
							</successCodes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>deft/${project.artifactId}:${maven.build.timestamp}</name>
							<build>
								<dockerFileDir>${project.build.outputDirectory}</dockerFileDir>
								<tags>
									<tag>latest</tag>
								</tags>
							</build>
						</image>
					</images>
					<verbose>true</verbose>
					<saveFile>${project.build.directory}/deft_${project.artifactId}.${maven.build.timestamp}.tar.xz</saveFile>
					<saveName>deft/${project.artifactId}:${maven.build.timestamp}</saveName>
				</configuration>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>save</id>
						<phase>install</phase>
						<goals>
							<goal>save</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
